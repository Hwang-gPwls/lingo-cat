apiVersion: apps/v1
kind: Deployment
metadata:
  name: lingocat
  namespace: default
  labels:
    app: lingocat
    version: v1.0.0
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  selector:
    matchLabels:
      app: lingocat
  template:
    metadata:
      labels:
        app: lingocat
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      containers:
        - name: lingocat
          image: your-registry/lingocat:latest
          imagePullPolicy: IfNotPresent
          
          # Environment variables from secret
          envFrom:
            - secretRef:
                name: lingocat-env
          
          # Container ports
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          
          # Resource limits and requests
          resources:
            requests:
              cpu: "100m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          
          # Readiness probe - is the service ready to receive traffic?
          readinessProbe:
            httpGet:
              path: /readiness
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
          
          # Liveness probe - is the service alive?
          livenessProbe:
            httpGet:
              path: /liveness
              port: http
            initialDelaySeconds: 30
            periodSeconds: 20
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          
          # Security context
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1001
          
          # Volume mounts for writable directories
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: app-tmp
              mountPath: /app/tmp
      
      # Volumes
      volumes:
        - name: tmp
          emptyDir: {}
        - name: app-tmp
          emptyDir: {}
      
      # Pod disruption settings
      terminationGracePeriodSeconds: 30
      
      # Node selector (optional)
      # nodeSelector:
      #   kubernetes.io/arch: amd64
      
      # Tolerations (optional)
      # tolerations:
      #   - key: "node.kubernetes.io/not-ready"
      #     operator: "Exists"
      #     effect: "NoExecute"
      #     tolerationSeconds: 300

---
apiVersion: v1
kind: Service
metadata:
  name: lingocat-service
  namespace: default
  labels:
    app: lingocat
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: http
      protocol: TCP
  selector:
    app: lingocat
